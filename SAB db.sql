CREATE DATABASE SABTaberna;

USE SABTaberna;

-- DROP DATABASE SABTaberna;

-- Table: ISUSER
CREATE TABLE ISUSER (
    UserID INT IDENTITY(1,1) PRIMARY KEY,
    UserName NVARCHAR(100) NOT NULL,
    Password NVARCHAR(100) NOT NULL,
    Age NVARCHAR(3),
    Gender NVARCHAR(10),
    RegistrationDate DATE NOT NULL,
    Contact NVARCHAR(15) NOT NULL
);


-- Table: LOGIN_HISTORY
CREATE TABLE LOGIN_HISTORY (
    LoginID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    LoginDate DATE NOT NULL,
    CategoryName NVARCHAR(50) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES ISUSER(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: ADMIN
CREATE TABLE ADMIN (
    AdminID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    Role NVARCHAR(50) NOT NULL,
    FOREIGN KEY (UserID) REFERENCES ISUSER(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: CUSTOMER
CREATE TABLE CUSTOMER (
    CustomerID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    Name NVARCHAR(100) NOT NULL,
    PaymentPreferences NVARCHAR(50),
    FOREIGN KEY (UserID) REFERENCES ISUSER(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: SELLER
CREATE TABLE SELLER (
    SellerID INT IDENTITY(1,1) PRIMARY KEY,
    UserID INT NOT NULL,
    StoreName NVARCHAR(100) NOT NULL,
    StoreAddress NVARCHAR(200),
    VerificationStatus NVARCHAR(50),
    AccountStatus NVARCHAR(50),
    FOREIGN KEY (UserID) REFERENCES ISUSER(UserID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: CATEGORY
CREATE TABLE CATEGORY (
    CategoryID INT IDENTITY(1,1) PRIMARY KEY,
    CategoryName NVARCHAR(100) NOT NULL
);


-- Table: ISPRODUCT
CREATE TABLE ISPRODUCT (
    ProductID INT IDENTITY(1,1) PRIMARY KEY,
    Name NVARCHAR(100) NOT NULL,
    Price FLOAT NOT NULL,
    Description NVARCHAR(255),
    Brand NVARCHAR(50),
    Rating FLOAT,
    StockLevel INT NOT NULL,
    SellerID INT NOT NULL,
    CategoryID INT NOT NULL,
    FOREIGN KEY (SellerID) REFERENCES SELLER(SellerID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (CategoryID) REFERENCES CATEGORY(CategoryID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- drop table cart

-- Table: CART
CREATE TABLE CART (
    CartID INT IDENTITY(1,1) PRIMARY KEY,
    CustomerID INT NOT NULL,
    DateCreated DATE NOT NULL,
    DateModified DATE,
    CartStatus NVARCHAR(50),
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID)
);


-- Table: CART_ITEM
CREATE TABLE CART_ITEM (
    Cart_ItemID INT IDENTITY(1,1) PRIMARY KEY,
    CartID INT NOT NULL,
    ProductID INT NOT NULL,
    Quantity INT NOT NULL,
    FOREIGN KEY (CartID) REFERENCES CART(CartID) ON DELETE NO ACTION ON UPDATE CASCADE,
    FOREIGN KEY (ProductID) REFERENCES ISPRODUCT(ProductID) ON DELETE NO ACTION ON UPDATE CASCADE
);



-- drop table ISORDER

-- Table: ISORDER
CREATE TABLE ISORDER (
    OrderID INT IDENTITY(1,1) PRIMARY KEY,
    CustomerID INT NOT NULL,
    OrderDate DATE NOT NULL,
    ShippingStatus NVARCHAR(50),
    PaymentStatus NVARCHAR(50),
    TotalAmount FLOAT NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID)
);


-- Table: ORDER_ITEM
CREATE TABLE ORDER_ITEM (
    Order_ItemID INT IDENTITY(1,1) PRIMARY KEY,
    OrderID INT NOT NULL,
    ProductID INT NOT NULL,
    SellerID INT NOT NULL,
    Quantity INT NOT NULL,
    Price FLOAT NOT NULL,
    FOREIGN KEY (OrderID) REFERENCES ISORDER(OrderID) ON DELETE NO ACTION ON UPDATE CASCADE,
    FOREIGN KEY (ProductID) REFERENCES ISPRODUCT(ProductID) ON DELETE NO ACTION ON UPDATE CASCADE,
    FOREIGN KEY (SellerID) REFERENCES SELLER(SellerID)
);


-- Table: PAYMENT
CREATE TABLE PAYMENT (
    PaymentID INT IDENTITY(1,1) PRIMARY KEY,
    OrderID INT NOT NULL,
    CustomerID INT NOT NULL,
    PaymentDate DATE NOT NULL,
    Amount FLOAT NOT NULL,
    PaymentMethod NVARCHAR(50),
    FOREIGN KEY (OrderID) REFERENCES ISORDER(OrderID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: REVIEW
CREATE TABLE REVIEW (
    ReviewID INT IDENTITY(1,1) PRIMARY KEY,
    ProductID INT NOT NULL,
    CustomerID INT NOT NULL,
    Rating INT NOT NULL,
    ReviewText NVARCHAR(255),
    ReviewDate DATE NOT NULL,
    FOREIGN KEY (ProductID) REFERENCES ISPRODUCT(ProductID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID) ON DELETE NO ACTION
);


-- Table: SHIPMENT
CREATE TABLE SHIPMENT (
    ShipmentID INT IDENTITY(1,1) PRIMARY KEY,
    OrderID INT NOT NULL,
    SellerID INT NOT NULL,
    TrackingNumber NVARCHAR(50),
    DeliveryStatus NVARCHAR(50),
    EstimatedDeliveryDate NVARCHAR(50),
    PickupDate NVARCHAR(50),
    DeliveryDate NVARCHAR(50),
    LogisticsProviderID INT NOT NULL,
    LabelGenerated BIT NOT NULL,
    FOREIGN KEY (SellerID) REFERENCES SELLER(SellerID) ON DELETE CASCADE ON UPDATE CASCADE,
    FOREIGN KEY (OrderID) REFERENCES ISORDER(OrderID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: LOGISTICS_PROVIDER
CREATE TABLE LOGISTICS_PROVIDER (
    LogisticsProviderID INT IDENTITY(1,1) PRIMARY KEY,
    OrderID INT NOT NULL,
    ShipmentID INT NOT NULL,
    AssignedArea NVARCHAR(100),
    ProviderName NVARCHAR(100),
    FOREIGN KEY (OrderID) REFERENCES ISORDER(OrderID),
    FOREIGN KEY (ShipmentID) REFERENCES SHIPMENT(ShipmentID)
);


-- Table: WISHLIST
CREATE TABLE WISHLIST (
    WishlistID INT IDENTITY(1,1) PRIMARY KEY,
    CustomerID INT NOT NULL,
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID) ON DELETE CASCADE ON UPDATE CASCADE
);


-- Table: WISHLIST_ITEM
CREATE TABLE WISHLIST_ITEM (
    WishlistItemID INT IDENTITY(1,1) PRIMARY KEY,
    WishlistID INT NOT NULL,
    ProductID INT NOT NULL,
    FOREIGN KEY (WishlistID) REFERENCES WISHLIST(WishlistID),
    FOREIGN KEY (ProductID) REFERENCES ISPRODUCT(ProductID)
);


-- Table: ISRETURN
CREATE TABLE ISRETURN (
    ReturnID INT IDENTITY(1,1) PRIMARY KEY,
    CustomerID INT NOT NULL,
    ReturnDate NVARCHAR(50),
    Reason NVARCHAR(255),
    RefundAmount INT,
    FOREIGN KEY (CustomerID) REFERENCES CUSTOMER(CustomerID) ON DELETE CASCADE ON UPDATE CASCADE
);

